{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","console","log","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAGMA,G,MAAe,CACpBC,OAAQ,CACPC,KAAM,sBACNC,SAAU,OAEXC,OAAQ,CACPF,KAAM,kBACNC,SAAU,eA0BGE,EAdO,SAACC,GACtB,IATkBC,EAAKC,EASjBC,GATYF,EASOD,EAAMC,KATRC,GASa,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACjBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIG,EAELP,EAAaS,GAAhCP,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,SAGd,OAFAS,QAAQC,IAAR,4BAAiCV,EAAjC,UACAS,QAAQC,IAAR,4BAAiCV,EAAjC,UAEC,yBAAKW,UAAS,yBAAoBL,IACjC,uBAAGK,UAAS,4BAAuBX,EAAvB,WACZ,4BAAKD,GACL,uBAAGY,UAAS,6BAAwBX,EAAxB,aC7BTY,EAAU,SAACT,GAChB,OACC,yBAAKQ,UAAU,oBACd,yBAAKA,UAAU,sBAAf,IAAsCR,EAAMU,WAI/CD,EAAQE,aAAe,CACtBD,QAAS,cAGKD,QCRTG,E,4MACLC,MAAQ,CAAEZ,IAAK,KAAMa,aAAc,I,kEACd,IAAD,OACnBC,OAAOC,UAAUC,YAAYC,oBAC5B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEnB,IAAKkB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAI5C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMZ,IACnC,uCAAauB,KAAKX,MAAMC,eAE3BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMZ,IACnC,kBAAC,EAAD,CAAeA,IAAKuB,KAAKX,MAAMZ,MAEhC,kBAAC,EAAD,CAASS,QAAQ,qC,+BAGxB,OAAO,6BAAMc,KAAKC,qB,GAlBFC,IAAMC,WAqBxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.4d2a1135.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n\tsummer: {\r\n\t\ttext: \"Let's hit the beach\",\r\n\t\ticonName: 'sun',\r\n\t},\r\n\twinter: {\r\n\t\ttext: 'Burr it is cold',\r\n\t\ticonName: 'snowflake',\r\n\t},\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n\tif (month > 2 && month < 9) {\r\n\t\treturn lat > 0 ? 'summer' : 'winter';\r\n\t} else {\r\n\t\treturn lat > 0 ? 'winter' : 'summer';\r\n\t}\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n\tconst season = getSeason(props.lat, new Date().getMonth());\r\n\tconst { text, iconName } = seasonConfig[season];\r\n\tconsole.log(`icon-left massive ${iconName} icon`);\r\n\tconsole.log(`icon-left massive ${iconName} icon`);\r\n\treturn (\r\n\t\t<div className={`season-display ${season}`}>\r\n\t\t\t<i className={`icon-left massive ${iconName} icon`} />\r\n\t\t\t<h1>{text}</h1>\r\n\t\t\t<i className={`icon-right massive ${iconName} icon`} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n\treturn (\r\n\t\t<div className='ui active dimmer'>\r\n\t\t\t<div className='ui big text loader'> {props.message}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nSpinner.defaultProps = {\r\n\tmessage: 'Loading...',\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n\tstate = { lat: null, errorMessage: '' };\r\n\tcomponentDidMount() {\r\n\t\twindow.navigator.geolocation.getCurrentPosition(\r\n\t\t\t(position) => this.setState({ lat: position.coords.latitude }),\r\n\t\t\t(err) => this.setState({ errorMessage: err.message })\r\n\t\t);\r\n\t}\r\n\trenderContent() {\r\n\t\tif (this.state.errorMessage && !this.state.lat) {\r\n\t\t\treturn <div>Error: {this.state.errorMessage}</div>;\r\n\t\t}\r\n\t\tif (!this.state.errorMessage && this.state.lat) {\r\n\t\t\treturn <SeasonDisplay lat={this.state.lat} />;\r\n\t\t}\r\n\t\treturn <Spinner message='Please accept location request' />;\r\n\t}\r\n\trender() {\r\n\t\treturn <div>{this.renderContent()}</div>;\r\n\t}\r\n}\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}